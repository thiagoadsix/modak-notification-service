{
  "compilerOptions": {
    /* Visit https://aka.ms/tsconfig to read more about this file */
    /* Projects */
    // "incremental": true,                              /* Save .tsbuildinfo files to allow for incremental compilation of projects. */
    /* Language and Environment */
    "target": "es2016", /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    "module": "commonjs", /* Specify what module code is generated. */
    "lib": [
      "es2016",
      "DOM"
    ], /* Specify a set of bundled library declaration files that describe the target runtime environment. */
    /* Modules */
    "rootDir": ".", /* Specify the root folder within your source files. */
    "outDir": "./dist", /* Specify an output folder for all emitted files. */
    "esModuleInterop": true, /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
    "forceConsistentCasingInFileNames": true, /* Ensure that casing is correct in imports. */
    "resolveJsonModule": true, /* Enable importing .json files. */
    "moduleResolution": "node", /* Specify how TypeScript looks up a file from a given module specifier. */
    /* Type Checking */
    "strict": true, /* Enable all strict type-checking options. */
    "noImplicitAny": true, /* Enable error reporting for expressions and declarations with an implied 'any' type. */
    "strictNullChecks": true, /* When type checking, take into account 'null' and 'undefined'. */
    "strictFunctionTypes": true, /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */
    "noImplicitReturns": true, /* Enable error reporting for codepaths that do not explicitly return in a function. */
    "noFallthroughCasesInSwitch": true, /* Enable error reporting for fallthrough cases in switch statements. */
    "alwaysStrict": true, /* Ensure 'use strict' is always emitted. */
    "useUnknownInCatchVariables": true, /* Type catch clause variables as 'unknown' instead of 'any'. */
    "strictPropertyInitialization": true, /* Enable strict checking of property initialization in classes. */
    "noImplicitThis": true, /* Enable error reporting when 'this' is given the type 'any'. */
    "strictBindCallApply": true, /* Enable strict 'bind', 'call', and 'apply' methods on functions. */
    "noPropertyAccessFromIndexSignature": true, /* Enforces using indexed accessors for keys declared using an indexed type */
    "noUncheckedIndexedAccess": false, /* Disallow unchecked indexing into objects */
    "exactOptionalPropertyTypes": true, /* Interpret optional property types as written, rather than adding 'undefined'. */
    "noImplicitOverride": true, /* Ensure overriding members in derived classes are marked with an 'override' modifier. */
    "noUnusedLocals": true, /* Enable error reporting when a local variables aren't read. */
    "noUnusedParameters": true, /* Remove unused parameters in functions. */
    "allowUnreachableCode": false, /* Disable error reporting for unreachable code. */
    "allowUnusedLabels": false, /* Disable error reporting for unused labels. */
    "noImplicitUseStrict": false, /* Enable error reporting for implicit 'use strict' directives. */
    "suppressExcessPropertyErrors": false, /* Disable reporting of excess property errors during the creation of object literals. */
    "suppressImplicitAnyIndexErrors": false, /* Disable error reporting for indexing objects lacking index signatures. */
    "noStrictGenericChecks": false, /* Disable strict checking of generic signatures in function types. */
    /* Emit */
    "declaration": true, /* Generate .d.ts files from TypeScript and JavaScript files in your project. */
    "sourceMap": true, /* Create source map files for emitted JavaScript files. */
    "removeComments": true, /* Disable emitting comments. */
    "noEmitOnError": true, /* Disable emitting files if any type checking errors are reported. */
    /* Completeness */
    "skipLibCheck": true, /* Skip type checking all .d.ts files. */
    "baseUrl": ".", /* Specify the base directory to resolve non-relative module names. */
    "paths": {
      "@/*": [
        "src/*"
      ]
    } /* Specify path mapping to be computed relative to baseUrl option. */
  },
  "include": [
    "__tests__/**/*",
    "src/**/*"
  ], /* Include all .ts files in the src folder */
  "exclude": [
    "node_modules",
    "dist"
  ] /* Exclude node_modules and dist folders */
}